server.port=9091
spring.main.allow-circular-references = true
#------standalone Localhost Keycloak Server connecting spring boot to it and using it with spring security -----#
# configure the realm for the Spring Boot adapter via the normal Spring Boot configuration
#basics of setting up a Keycloak server, connecting a Spring Boot application to it, and using it with Spring Security.
#Realm can be defined as a management unit of the Keycloak
#keycloak.realm = azizarealm
#is the Authorization server URL of the Keycloak.
#keycloak.auth-server-url = http://localhost:8080
#SSL Required is set to be external meaning that HTTPS is required by default for external requests.
#keycloak.ssl-required = external
# The resource is the Client or the applications that use Keycloak to authenticate users,
#keycloak.resource = delievrywebapimongodb-appclient
#Credentials Secret is the secret key for the Confidential clients only with access type confidentail but my client is bearer only ,the client secret you find it under client->the client name->credential when the access type = confidential
#keycloak.credentials.secret = DHKZETICcbJ9RHo3YpHRxT3hD0YzytLn
#keycloak.use-resource-role-mappings = true
#keycloak.bearer-only = true
#we can define keycloak.principal-attribute as preferred_username so as to populate our controller's Principal with a proper user
#keycloak.principal-attribute=preferred_username
#------------------------------------------------------#

#-----------------standalone Remote Keycloak Server-------#
keycloak.realm = UNILEVER-CD-REALM-DEV
keycloak.auth-server-url = https://utdcsc.com:9991/auth
keycloak.ssl-required = none
keycloak.disable-trust-manager = true
keycloak.allow-any-hostname = false
keycloak.resource = CustomerServiceMan-BE
keycloak.use-resource-role-mappings = true
keycloak.bearer-only = true
keycloak.principal-attribute= preferred_username
#------------------------------------------------------------#


##------standalone Localhost MongoDB configuration-----#
#spring.data.mongodb.uri=mongodb://localhost:27017
#spring.data.mongodb.database=fawaterydb
#spring.data.mongodb.auto-index-creation=true
##------------------------------------------------------#
##------MongoDB hosted on local host docker container configuration-----#
#spring.data.mongodb.host= host.docker.internal
#spring.data.mongodb.uri=mongodb://localhost
#dockerspring.data.mongodb.port=27019
#spring.data.mongodb.database=testdb
#spring.data.mongodb.auto-index-creation=true
##------------------------------------------------------#
##------MongoDB hosted remote server-----#
spring.data.mongodb.uri=mongodb://45.240.88.30:9992
spring.data.mongodb.database=uni
spring.data.mongodb.auto-index-creation=true
##------------------------------------------------------#